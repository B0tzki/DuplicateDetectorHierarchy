import re

punctuations = '!"$%&\()*,\/:;<=>[\\]^`{|}~+?'  # omitted ' for contractions, excluded # @ . ? -
replace_string = ' ' * len(punctuations)
punctuations_regex = re.compile(r'!"\$%\&\\\(\)\*,\\/:;<=>\[\\\]\^`\{\|\}\~\+')
html1_regex = re.compile(r'(?:(?<=\s)|(?<=^)|(?<=[>\”]))[a-z-’]+(?:(?=\s)|(?=\:\s)|(?=$)|(?=[.!,;\”]))')
html2_regex = re.compile(r'<(\"[^\"]*\"|\'[^\']*\'|[^\'\">])*>')
code_snippet_regex = re.compile(r'<pre><code>([\s\S]*?)<\/code><\/pre>')
strong_snippet_regexes = [re.compile(r'<em>([\s\S]*?)<\/em>'), re.compile(r'<strong>([\s\S]*?)<\/strong>'),
                          re.compile(r'<code>([\s\S]*?)<\/code>')]
num_of_alpha_char_regex = re.compile(r'[a-zA-Z_]')
url_regex = re.compile(r'\(?https?://[^\s<>"]+|www\.[^\s<>"]+')
email_regex = re.compile(r'[a-z0-9\.\-+_]+@[a-z0-9\.\-+_]+\.[a-z]+')
triple_backtick = re.compile(r'```')
code_regexes = [re.compile(r'```.*?```', re.DOTALL), re.compile(r'``.*?``', re.DOTALL), re.compile(r'`.*?`', re.DOTALL)]
word_regex = re.compile(r'\w+')
ascii_regex = re.compile(r'[^\x00-\x7f]')
date_regex = re.compile(r'\d{4}-\d{2}-\d{2}')
time_regex = re.compile(r'\d{2}:\d{2}:\d{2}')
issue_regex = re.compile(r'#[0-9]+')
path_regex = re.compile(r'([a-zA-Z0-9._-]+)?(?:\.{2})?(?:\/\.{2})*((\/){1,2}[a-zA-Z0-9._-]+)+')
function_regex = re.compile(r'[a-zA-Z][a-zA-Z0-9_.]*\([a-zA-Z0-9_, ]*\)')
literal_nonascii_char_regex = re.compile(r'\\x[0-9]{2,}')  # literally \x00 \xff...
qoute_starter_regex = re.compile(r"^'")
dash_starter_regex = re.compile(r'^-')
dash_qoute_starter_space_regex = re.compile(r"(^| )(-|')+")
space_dash_qoute_end_regex = re.compile(r"(-|')+($| )")
consecutive_dashs_qoute_regex = re.compile(r"[\-|']{2,}")
num_regex = re.compile(r'[0-9]+(th)?(nd)?(rd)?(st)? ')
numbers = re.compile(r'\b([A-Za-z]*)\d+\b|\b\d+([A-Za-z]*)\b')

abrv_CS_common = {
    "alloc": "allocate",
    "auto": "automatic",
    "arg": "argument",
    "args": "argument",
    "attr": "attribute",
    "app": "application",
    "apps": "application",
    "async": "asynchronous",
    "bg": "background",
    "bin": "binary",
    "bool": "boolean",
    "btn": "button",
    "calc": "calculate",
    'clr': "clear",
    'cmd': "command",
    "cmp": "compare",
    'cnt': "counter",
    "cont": "continue",
    "config": "configuration",
    "cfg": "configuration",
    'col': "column",
    "ctrl": "control",
    "cpy": "copy",
    "db": 'database',
    "docs": 'documents',
    "doc": 'documents',
    "dev": "device",
    "disp": "display",
    "env": "environment",
    "err": "error",
    "func": "function",
    "foo": "function",
    "img": "image",
    "info": "information",
    "infos": "information",
    "init": "initialize",
    "lib": "library",
    "gen": "generate",
    "math": "mathematics",
    "mcu": "microcontroller",
    "mid": "middle",
    "misc": "miscellaneous",
    "mng": "manager",
    "msg": "message",
    "notif": "notification",
    "num": "number",
    "obj": "object",
    "oo": "object-oriented",
    "param": "parameter",
    "params": "parameter",
    "pic": "picture",
    "prev": "previous",
    "pkg": "package",
    "ptr": "pointer",
    "px": "pixel",
    "src": "source",
    "spec": "specification",
    "seq": "sequence",
    "sync": "synchronous",
    "temp": "temporary",
    "tgl": "toggle",
    "tmr": "timer",
    "txt": "text",
    "v": "version",
    "ver": "version",
    "vb": "visual basic",
    "vm": "virtual machine",
    "val": "value",
    "var": "variable",
    "vert": "vertical",
    "win": "windows"
}

topics_list = {
    'objective-c': 'objectivec',
    'c++': 'cplusplus',
    'c-plus-plus': 'cplusplus',
    'c#': 'csharp',
    'c-sharp': 'csharp',
    'f#': 'fsharp',
    'f-sharp': 'fsharp',
    'asp.net': 'aspnet',
    'asp-net': 'aspnet',
    '.net': 'dotnet',
    'dot-net': 'dotnet'
}

contractions = {
    "'ll": "will",
    "n't": "not",
    "'ve": "have",
    "'m": "am",
    "'s": "is",
    "doesnt": "does not",
    "dont": "does not",
    "cant": "does not",
    "wont": "will not",
    "ain't": "are not",
    "aren't": "are not",
    "can't": "can not",
    "can't've": "can not have",
    "'cause": "because",
    "could've": "could have",
    "couldn't": "could not",
    "couldn't've": "could not have",
    "didn't": "did not",
    "doesn't": "does not",
    "don't": "do not",
    "hadn't": "had not",
    "hadn't've": "had not have",
    "hasn't": "has not",
    "haven't": "have not",
    "he'd": "he had",
    "he'd've": "he would have",
    "he'll": "he will",
    "he'll've": "he will have",
    "he's": "he is",
    "how'd": "how did",
    "how'd'y": "how do you",
    "how'll": "how will",
    "how's": "how is",
    "i'd": "I would",
    "i'd've": "I would have",
    "i'll": "I will",
    "i'll've": "I will have",
    "i'm": "I am",
    "i've": "I have",
    "isn't": "is not",
    "it'd": "it had",
    "it'd've": "it would have",
    "it'll": "it will",
    "it'll've": "it will have",
    "it's": "it is",
    "let's": "let us",
    "ma'am": "madam",
    "mayn't": "may not",
    "might've": "might have",
    "mightn't": "might not",
    "mightn't've": "might not have",
    "must've": "must have",
    "mustn't": "must not",
    "mustn't've": "must not have",
    "needn't": "need not",
    "needn't've": "need not have",
    "o'clock": "of the clock",
    "oughtn't": "ought not",
    "oughtn't've": "ought not have",
    "shan't": "shall not",
    "sha'n't": "shall not",
    "shan't've": "shall not have",
    "she'd": "she had",
    "she'd've": "she would have",
    "she'll": "she will",
    "she'll've": "she will have",
    "she's": "she is",
    "should've": "should have",
    "shouldn't": "should not",
    "shouldn't've": "should not have",
    "so've": "so have",
    "so's": "so is",
    "that'd": "that had",
    "that'd've": "that would have",
    "that's": "that is",
    "there'd": "there would",
    "there'd've": "there would have",
    "there's": "there is",
    "they'd": "they would",
    "they'd've": "they would have",
    "they'll": "they will",
    "they'll've": "they will have",
    "they're": "they are",
    "they've": "they have",
    "to've": "to have",
    "wasn't": "was not",
    "we'd": "we would",
    "we'd've": "we would have",
    "we'll": "we will",
    "we'll've": "we will have",
    "we're": "we are",
    "we've": "we have",
    "weren't": "were not",
    "what'll": "what will",
    "what'll've": "what will have",
    "what're": "what are",
    "what's": "what is",
    "what've": "what have",
    "when's": "when is",
    "when've": "when have",
    "where'd": "where did",
    "where's": "where is",
    "where've": "where have",
    "who'll": "who will",
    "who'll've": "who will have",
    "who's": "who is",
    "who've": "who have",
    "why's": "why is",
    "why've": "why have",
    "will've": "will have",
    "won't": "will not",
    "won't've": "will not have",
    "would've": "would have",
    "wouldn't": "would not",
    "wouldn't've": "would not have",
    "y'all": "you all",
    "y'all'd": "you all would",
    "y'all'd've": "you all would have",
    "y'all're": "you all are",
    "y'all've": "you all have",
    "you'd": "you would",
    "you'd've": "you would have",
    "you'll": "you will",
    "you'll've": "you will have",
    "you're": "you are",
    "you've": "you have"
}

abrv_top50 = {
    "2moro": "tomorrow",
    "2nite": "tonight",
    "btw": "moreover",
    "gr8": "great",
    "imho": "opinion",
    "j/k": "kidding",
    "lmao": "laughing",
    "lol": "laughing",
    "nub": "new person",
    "noob": "new person",
    "newbe": "new person",
    "omg": "disbelief",
    "pov": "point",
    "plz": "please",
    "thx": "thanks",
    "thks": "thanks",
    "rtm": "read manual",
    "rtfm": "read manual",
    "wtf": "annoyment",
    "i.e.": "meaning",
    ".i.e.": "meaning",
    "ie": "meaning",
    "e.g.": "example",
    ".e.g.": "example",
    "eg": "example"
}

dates_list = {
    'january': 'datereplaced',
    'february': 'datereplaced',
    'march': 'datereplaced',
    'april': 'datereplaced',
    'june': 'datereplaced',
    'july': 'datereplaced',
    'august': 'datereplaced',
    'september': 'datereplaced',
    'october': 'datereplaced',
    'november': 'datereplaced',
    'december': 'datereplaced',
    'tuesday': 'dayreplaced',
    'wednesday': 'dayreplaced',
    'thursday': 'dayreplaced',
    'friday': 'dayreplaced',
    'saturday': 'dayreplaced',
    'sunday': 'dayreplaced',
    'monday': 'dayreplaced',
    'afternoon': 'timereplaced',
    'tonight': 'timereplaced',
    'night': 'timereplaced',
    'morning': 'timereplaced',
    'tomorrow': 'timereplaced',
    "o'clock": 'timereplaced'
}
